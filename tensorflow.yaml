apiVersion: apps/v1
kind: Deployment
metadata:
  name: tensorflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tensorflow
  template:
    metadata:
      labels:
        app: tensorflow
    spec:
      containers:
      - name: tensorflow
        image: tensorflow/tensorflow:latest
        ports:
        - containerPort: 8080
        command: ["sh", "-c"]
        args: [
          "echo '<!DOCTYPE html><html><head><style>body { display: flex; justify-content: center; align-items: center; height: 100vh; margin: 0; font-family: Arial, sans-serif; } #content { text-align: center; } input[type=text], button { margin-top: 20px; padding: 10px; width: 300px; font-size: 16px; } button { cursor: pointer; } #response { margin-top: 20px; color: green; } </style></head><body><div id=\"content\"><h1>SysdigGPT</h1><form id=\"queryForm\"><input type=\"text\" placeholder=\"Ask me anything about AI Security\" name=\"userQuery\"><button type=\"submit\">Submit</button><div id='response'></div></form></div><script>document.getElementById('queryForm').onsubmit = function(event) { event.preventDefault(); const userQuery = document.querySelector('[name=\"userQuery\"]').value; const responseElement = document.getElementById('response'); if (!userQuery.trim()) { responseElement.textContent = 'No data sent to TensorFlow AI'; responseElement.style.color = 'red'; return; } fetch('/api/submit', { method: 'POST', headers: {'Content-Type': 'application/json'}, body: JSON.stringify({ query: userQuery }) }).then(response => { if (response.ok) { responseElement.textContent = 'Query successfully submitted to TensorFlow'; responseElement.style.color = 'green'; } else { throw new Error('Failed to submit query'); } }).catch(error => { responseElement.textContent = error.message; responseElement.style.color = 'red'; }); }; </script></body></html>' > /usr/share/html/index.html && \
          cd /usr/share/html && \
          python3 -m http.server 8080"
        ]
        volumeMounts:
        - name: html-volume
          mountPath: /usr/share/html
      volumes:
      - name: html-volume
        emptyDir: {}
